

```
// @itzispyder
def module new-kit
def desc "Spawns a new kit in your inventory"

on key_press 0 if playing execute_period 0.05 {
    say "/clear"

    // armor
    say "/item replace entity @s armor.head with netherite_helmet[enchantments={protection:4,unbreaking:3,mending:1}]"
    say "/item replace entity @s armor.chest with netherite_chestplate[enchantments={protection:4,unbreaking:3,mending:1}]"
    say "/item replace entity @s armor.legs with netherite_leggings[enchantments={blast_protection:4,unbreaking:3,mending:1}]"
    say "/item replace entity @s armor.feet with netherite_boots[enchantments={protection:4,unbreaking:3,mending:1}]"

    // offhand
    say "/item replace entity @s weapon.offhand with totem_of_undying"

    // hotbar
    say "/give @s netherite_sword[enchantments={sharpness:5,sweeping_edge:3,knockback:1,unbreaking:3,mending:1}]"
    say "/give @s obsidian 64"
    say "/give @s end_crystal 64"
    say "/give @s glowstone 64"
    say "/give @s respawn_anchor 64"
    say "/give @s netherite_pickaxe[enchantments={silk_touch:1,efficiency:5,unbreaking:3,mending:1}]"
    say "/give @s totem_of_undying"
    say "/give @s golden_apple 64"
    say "/give @s ender_pearl 16"

    // inventory
    say "/give @s totem_of_undying 16"
    say "/give @s experience_bottle 128"
    say "/give @s end_crystal 128"
    say "/give @s obsidian 192"
    say "/give @s ender_pearl 64"
}
```

```
// @itzispyder
module create tp-auto 
description Auto accept tpa 

on chat_receive "/tpaccept" {
    say "/tpaccept"
}
```

```
// @itzispyder
def module respawn-sprint
def desc "Respawn sprint reset fix"

on respawn wait 1 {
    input sprint
}
```

```
// @itzispyder
def module potion-swap
def desc "Right click with sword to switch to hotbar potion"

on right_click !if in_screen {
    if holding #sword if hotbar_has #splash_potion {
        switch #splash_potion
        wait 0.05 switch back
    }
}
```

```
//@i-no-one
def module create quick-elytra
def desc Press i to fly with elytra

on key_press i {
    if hotbar_has #firework {
        switch :elytra 
        input use
        switch #rocket
        input jumps
        wait 0.2 input jumps
        wait 0.1 input use
        send firework used
    }
}

```
// @vgs
def module fast-exp
def desc "Uses experience bottles quickly while holding right-click"

on tick if playing if holding #experience {
    if input_active use if chance_of 75 {
        input use
    }
}
```

```
// @wither123go
def module all-items-kb
def desc KB for CPvP

on left_click {
    if holding #crystal,#obsidian,#pearl,#golden_apple,#pickaxe,#totem,#anchor,#glowstone {
        if target_entity :player {
            switch #sword
        }
    }
}
```

```
// @itzispyder
def module sword-hit
def desc "Guarantees you hit your opponents with a sword"

on left_click if playing {
    if target_entity :player {
        switch #sword
    }
}
```

```
// @itzispyder
def module middle-click-pearl
def desc "Middle click your mouse to throw a pearl"

on middle_click if hotbar_has #pearl if playing {
    switch #pearl
    input use

    wait 0.05 {
        switch back
    }
}

on right_click if playing {
    if holding :stick if hotbar_has #wool {
        switch #wool

        wait 0.05 {
            switch back
        }
    }
}
```

```
// @itzispyder
def module fireball
def desc "Shoots entities when you right click. Change the summon command to change the entities that you shoot."

on right_click if playing wait 0.05 while 0.05 input_active use {
    if holding :air {
        say "/scoreboard objectives add x dummy"
        say "/scoreboard objectives add y dummy"
        say "/scoreboard objectives add z dummy"


        say "/summon fireball ~ ~1.6 ~ {Tags:[fireball],ExplosionPower:5,Fuse:60,life:9999,damage:100}"
        playsound #blast_far 10


        say "/execute positioned ~ ~1.6 ~ run summon area_effect_cloud ^ ^ ^10 {Duration:10,Tags:[fireball_target]}"
        say "/execute positioned ~ ~1.6 ~ run data modify entity @e[tag=fireball,limit=1,sort=nearest] Owner set from entity @s UUID"
        say "/execute positioned ~ ~1.6 ~ as @e[tag=fireball,limit=1,sort=nearest] at @s run execute store result score @s x run data get entity @s Pos[0] 100"
        say "/execute positioned ~ ~1.6 ~ as @e[tag=fireball,limit=1,sort=nearest] at @s run execute store result score @s y run data get entity @s Pos[1] 100"
        say "/execute positioned ~ ~1.6 ~ as @e[tag=fireball,limit=1,sort=nearest] at @s run execute store result score @s z run data get entity @s Pos[2] 100"
        say "/execute positioned ~ ~1.6 ~ as @e[tag=fireball_target,limit=1,sort=nearest] at @s run execute store result score @s x run data get entity @s Pos[0] 100"
        say "/execute positioned ~ ~1.6 ~ as @e[tag=fireball_target,limit=1,sort=nearest] at @s run execute store result score @s y run data get entity @s Pos[1] 100"
        say "/execute positioned ~ ~1.6 ~ as @e[tag=fireball_target,limit=1,sort=nearest] at @s run execute store result score @s z run data get entity @s Pos[2] 100"
        say "/execute positioned ~ ~1.6 ~ as @e[tag=fireball,limit=1,sort=nearest] at @s run execute store result score @s x run scoreboard players operation @e[type=area_effect_cloud,tag=fireball_target,limit=1,sort=nearest] x -= @s x"
        say "/execute positioned ~ ~1.6 ~ as @e[tag=fireball,limit=1,sort=nearest] at @s run execute store result score @s y run scoreboard players operation @e[tag=fireball_target,limit=1,sort=nearest] y -= @s y"
        say "/execute positioned ~ ~1.6 ~ as @e[tag=fireball,limit=1,sort=nearest] at @s run execute store result score @s z run scoreboard players operation @e[tag=fireball_target,limit=1,sort=nearest] z -= @s z"
        say "/kill @e[type=area_effect_cloud,tag=fireball_target,limit=1,sort=nearest]"
        
        say "/execute positioned ~ ~1.6 ~ as @e[tag=fireball,limit=1,sort=nearest] at @s run execute store result entity @s power[0] double 0.0001 run scoreboard players get @s x"
        say "/execute positioned ~ ~1.6 ~ as @e[tag=fireball,limit=1,sort=nearest] at @s run execute store result entity @s power[1] double 0.0001 run scoreboard players get @s y"
        say "/execute positioned ~ ~1.6 ~ as @e[tag=fireball,limit=1,sort=nearest] at @s run execute store result entity @s power[2] double 0.0001 run scoreboard players get @s z"
        say "/execute positioned ~ ~1.6 ~ as @e[tag=fireball,limit=1,sort=nearest] at @s run execute store result entity @s Motion[0] double 0.002 run scoreboard players get @s x"
        say "/execute positioned ~ ~1.6 ~ as @e[tag=fireball,limit=1,sort=nearest] at @s run execute store result entity @s Motion[1] double 0.002 run scoreboard players get @s y"
        say "/execute positioned ~ ~1.6 ~ as @e[tag=fireball,limit=1,sort=nearest] at @s run execute store result entity @s Motion[2] double 0.002 run scoreboard players get @s z"
        
        say "/scoreboard objectives remove x"
        say "/scoreboard objectives remove y"
        say "/scoreboard objectives remove z"
    }
}
```

```
// @itzispyder
def module double-clicker
def desc "Clicks a second time when you release your mouse"

on left_release if playing {
    input attack
}

on right_release if playing {
    input use
}
```

```
// @itzispyder
def module new-world
def desc "Use this script to help set up new creative worlds."

on key_press - if playing execute_period 0.05 {
    say "/gamemode creative"
    say "/gamerule keepInventory true"
    say "/difficulty peaceful"
    say "/gamerule doDaylightCycle false"
    say "/gamerule doWeatherCycle false"
    say "/gamerule doMobSpawning false"
    say "/weather clear"
    say "/time set day"
    say "/clear"

    loop_period 3 1 {
        say "/kill @e[type=!player]"
    }
}
```

```
// @itzispyder
def module coherent-trigger-bot
def desc "Coherent Client's Trigger Bot"

on tick if playing if target_entity :player,:armor_stand !if blocking {
    if attack_progress >=0.9 if chance_of 75 {
        as target_entity if blocking as client if hotbar_has #_axe {
            switch #axe
            wait 0.05 switch back
        }
        input left
    }
}
```
```
//@i-no-one
def module og-swaps
def desc "Return The Old Totem2pearl And Totem2pearl Modules"

on right_click {
    if holding #sword {
        switch #pearl
        wait 0.02 input use
        wait_random 0.03 0.08 switch back
    }
}

on right_click {
    if holding #totem {
        switch #pearl
        wait 0.02 input use
        wait_random 0.03 0.08 switch back
    }
}
```

```
//@i-no-one
def module mace-swap 
def desc "Return The Old Totem2pearl And Totem2pearl Modules"

on right_click {
    if holding #mace {
        switch #pearl
        wait 0.02 input use
    }
}
```

```
// @itzispyder
def module custom-elytra-switch
def desc "Equip elytra automatically when double jumping while holding a firework"

// auto disable elytra when not in use
on tick if playing if on_ground {
    !if holding #firework,#chestplate if equipment_has :elytra if hotbar_has #chestplate {
        func disableElytra
    }
}

// auto activate elytra
on key_press space if playing !if on_ground {
    if holding #firework !if input_active forward {
        if equipment_has :elytra func useElytra // if elytra already equipped
        if hotbar_has :elytra func switchElytra // if elytra not already equipped
    }

    // auto activate elytra when jumping while falling
    !if holding #firework if hotbar_has :elytra if block ~ ~-1 ~ :air if block ~ ~-2 ~ :air {
        switch :elytra
        input use
        switch back
    }
}

def func useElytra {
    wait 0.05 input use
}

def func switchElytra {
    switch :elytra
    input use
    execute_period 0.05 {
        switch back
        input use
    }
}

def func disableElytra {
    switch #chestplate
    input use
    switch back
}
```
